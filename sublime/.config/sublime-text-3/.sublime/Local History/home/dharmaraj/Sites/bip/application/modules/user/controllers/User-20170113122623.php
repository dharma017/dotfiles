<?php

class User extends Public_Controller {

    public $bipPageTitle = "InstÃ¤llningar";

    function __construct() {
        parent::__construct();
        $this->load->model('setting/setting_model');
        $this->load->model('statistics/statistics_model');
    }

    function index() {

        $this->session->set_userdata(array('userSearch' => ''));
        $this->session->set_userdata(array('AlterBy' => 'asc'));
        $this->session->set_userdata(array('userOrderBy' => 'first_name'));

        $data["main_content"] = 'user/userpsy';
        $data["template_header"] = 'includes/template_header';
        $data["template_footer"] = 'includes/template_footer';

        $this->load->view('includes/template', $data);
    }

    function listAllUser() {
        $orderBy = $this->input->post('orderBy');
		/*
        if ($orderBy == '')
            $orderBy = 'id asc';
		*/
        $usertype = getUserType();
        $psychologistid = ($usertype == 'Psychologist') ? $this->session->userdata('user_id') : '';
        $data['psychologist_id'] = $this->input->post('psychologist_id');
        $data['difficulty_id'] = $this->input->post('difficulty_id');
        $data['group_id'] = $this->input->post('group_id');
		$data["search_txt"] = $this->input->post('search_txt');
        $result = $this->user_model->getAllUser($offset = 0, $datalimit = 50, $orderBy, $psychologistid);

        $this->load->view('user/list',$data);
    }

function get_selected_grp(){
        $data['group'] = $this->user_model->getAllGroupByLang();

        $selected_grp = $this->input->post('selected_grp_id');
        $psychology = json_decode(json_encode($this->user_model->getAllpsychologyByLangHavingTreatPatientPermission($selected_grp)),true);



        // $query=$this->db->query("SELECT * FROM bip_user b where find_in_set('$selected_grp', cast(b.group_id as char)) > 0 )");
        // $result=$query->result_array();

    //echo $data['selected_grp'];exit;

        $filteredPsycho=[];
        $permission=[];

        foreach ($psychology as $key => $pyscho) {

                $perm=['permission'=>json_decode($pyscho['permission'],true),'psyid'=>$pyscho['id']];
                $permission[] = $perm;
        }
        // echo $selected_grp;
        $group_arr=[];
         // print_r($permission);
        foreach($permission as $keys =>$val){
    // echo "test";

            if(isset($val['permission']['rights_per_group'][$selected_grp])){

                $group_arr[]= $val['psyid'];
            }
        }

        // print_r($group_arr);
         foreach ($psychology as $key => $pyscho) {
               if(!in_array($pyscho['id'],$group_arr)){
                    continue;
                }
                $pyscho['first_name'] = $this->encryption->decrypt($pyscho['first_name']);
                $pyscho['last_name'] = $this->encryption->decrypt($pyscho['last_name']);
                 $filteredPsycho[]= $pyscho;
        }


        echo json_encode($filteredPsycho);
        //$this->load->view('user/add_user', $data);
    }
    function addUserForm() {
        $userId = $this->session->userdata('user_id');
        $data['group'] = $this->user_model->getAllGroupByLang();
        $data['psychology'] = $this->user_model->getAllpsychologyByLangHavingTreatPatientPermission();
        $data['selected_grp'] = $this->input->post('selected_grp_id');
        $data['rows']->permission = $this->user_model->getUserByUserId($userId)->permission;
        //dd($data['rows']);
        $this->load->view('user/add_user', $data);
    }

    function addUser() {

    	$userId = $this->input->post('userId');

      $this->load->library('form_validation');
      $this->form_validation->set_rules('username','lang:username','trim|required|xss_clean|min_length[2]');
      $this->form_validation->set_rules('oldUsername','lang:username','trim|xss_clean|min_length[2]');

      if ($userId>0)
	      $this->form_validation->set_rules('autogeneratedpw','lang:autogeneratedpw','trim|xss_clean|min_length[5]');
	  	else
	      $this->form_validation->set_rules('autogeneratedpw','lang:autogeneratedpw','trim|required|xss_clean|min_length[5]');

      $this->form_validation->set_rules('firstName','lang:firstName','trim|required|xss_clean');
      $this->form_validation->set_rules('lastName','lang:lastName','trim|required|xss_clean');
      $this->form_validation->set_rules('email', 'lang:email', 'trim|valid_email');
      $this->form_validation->set_rules('address','lang:address','trim|xss_clean');
      $this->form_validation->set_rules('city','lang:city','trim|xss_clean');
      $this->form_validation->set_rules('contact_number','lang:contact_number','trim|xss_clean');
      $this->form_validation->set_rules('contact_number_1','lang:contact_number_1','trim|xss_clean');
      $this->form_validation->set_rules('from','lang:from','trim|required|xss_clean');
      $this->form_validation->set_rules('to','lang:to','trim|required|xss_clean');

      if ($this->form_validation->run() == FALSE) {

        if ($userId>0) {
          $this->editUser();
        }else{
          $this->addUserForm();
        }
      }else{
        if ($this->user_model->addUser()):
            $this->listAllUser();
        endif;
      }
    }

    function createPassword() {
        $pw = $this->user_model->createPassword(6);
        echo $pw;
    }

    function editUser() {
        $userId = $_POST['userId'];
        $this->user_model->updateRevisionUserTable($userId,'VIEW');
        $data['task'] = "edit_user";
        $data['rows'] = $this->user_model->getUserByUserId($userId);
        $data['group'] = $this->user_model->getAllGroup();
        $edit_psy_id = $this->input->post('userId');
        $data['edit_psy_id'] = $this->input->post('userId');
        $data['psy']->permission = $this->user_model->getUserByUserId($edit_psy_id)->permission;
        // $data['psychology'] = $this->user_model->getPsychologyByDifficulty();
        $data['psychology'] = $this->user_model->getAllpsychologyByLangHavingTreatPatientPermission();
        $data['current']="edit";
        $this->load->view('user/add_user', $data);
    }

    function editSave() {
        $this->user_model->addUser();
        $this->listAllUser();
    }

    function deleteUser() {
        $userId = $this->input->post('userId');
        $this->user_model->delectUserById($userId);
        $this->listAllUser();
    }

    function checkUsername() {
        $username = $this->input->post('username');
        $userExists = $this->user_model->checkUsername($username);
        echo $userExists;
    }

    function changeUsername($userId) {
        $data['userId'] = $userId;
        $this->load->view("user/change_username", $data);
    }

    function getPsychologyByDifficulty() {
        $difficultyid = trim($this->input->post('difficultyid'));
        $rsdata = $this->user_model->getPsychologyByDifficulty($difficultyid);
        if ($rsdata) {
            foreach ($rsdata as $data) {
                echo '<option value="' . $data->id . '">' . $data->first_name . ' ' . $data->last_name . '</option>';
            }
        } else {
            echo '<option value="">No Psychologist Available</option>';
        }
    }

    function decode5t($str) {
        for ($i = 0; $i < 5; $i++) {
            $str = base64_decode(strrev($str)); //apply base64 first and then reverse the string}
        }
        return $str;
    }

    function createPdf($userId) {/*
      $this->load->helper(array('dompdf', 'file'));
      $userDetail = 	$this->user_model->getUserByUserId($userId);
      $password	=	$userDetail->password;
      $data['password']	=	$this->decode5t($password);
      $data['username'] 		= 	$userDetail->username;
      $html = $this->load->view('user/template',$data,true);

      $data = pdf_create($html, 'BIP_'.$userId, true);
      write_file('name', $data);

      //if you want to write it to disk and/or send it as an attachment
     */
        $userDetail = $this->user_model->getUserByUserId($userId);

        $userDetail = $this->user_model->getUserByUserId($userId);
        $password = $userDetail->password;

        $data['password'] = $this->decode5t($password);
        $data['username'] = $userDetail->username;
        $html = $this->load->view('user/template', $data, true);


        echo
        '<form action="' . base_url() . 'pdf/application/generate.php" name="tempForm" method="post" enctype="multipart/form-data">
			<input type="hidden" value="' . $data['username'] . '" name="username">
			<input type="hidden" value="' . $data['password'] . '" name="password">
			<input type="hidden" value="' . $userId . '" name="user">
		</form>
		<script language="javascript">
		document.tempForm.submit();
		</script>
		';
    }

    function generateXlsReport($groupId) {
        $data["stepList"] = $this->user_model->getStepsForXls($groupId);
        $data["groupId"] = $groupId;

        $strSql = "SELECT group_name FROM bip_group WHERE id='$groupId'";
        $query = $this->db->query($strSql);
        $result = $query->row();
        $groupName = str_ireplace(" ", "_", $result->group_name);

        $this->load->view("user/admin/excel", $data);

        header("Content-type: application/octet-stream");
        header("Content-Disposition: attachment; filename=BIP_" . $groupName . "_" . time() . ".xls");
        header("Pragma: no-cache");
        header("Expires: 0");
    }
     function filterUserByParams() {
        $usertype = $this->session->userdata('logintype');
        $data["search_txt"] = $this->input->post('search_txt');

        $data['psychologist_id'] = $this->input->post('psychologist_id');
        $data['difficulty_id'] = $this->input->post('difficulty_id');
        $data['group_id'] = $this->input->post('group_id');

        $this->load->view('user/list', $data);
    }

    function listUserByPsychologist() {
        $usertype = $this->session->userdata('logintype');
        //$psychologistid = ($usertype == 'Psychologist') ? $this->session->userdata('user_id') : '';
        $data["search_txt"] = $this->input->post('search_txt');
        $data['psychologist_id'] = $this->input->post('psychologist_id');
        $this->load->view('user/admin/list', $data);
    }

    function listUserByDifficulty() {
        $usertype = $this->session->userdata('logintype');
        //$diffcultyid = ($usertype == 'Psychologist') ? $this->session->userdata('user_id') : '';
        $data["search_txt"] = $this->input->post('search_txt');
        $data['difficulty_id'] = $this->input->post('difficulty_id');
        $this->load->view('user/admin/list', $data);
    }

    function listUserByGroup() {
        $usertype = $this->session->userdata('logintype');
        //$groupid = ($usertype == 'Psychologist') ? $this->session->userdata('user_id') : '';
        $data["search_txt"] = $this->input->post('search_txt');
        $data['group_id'] = $this->input->post('group_id');
        $this->load->view('user/admin/list', $data);
    }

    function saveMail() {

        $usertype = getUserType();
        if ($usertype == 'Psychologist'):
            $userId = $this->session->userdata("p_id");
            $userId = $this->input->post('userId');
            $psychologistId = $this->session->userdata('user_id');
        else:
            $userId = $this->session->userdata('user_id');
            $psychologistId = $this->session->userdata('psychologist_id');
        endif;



        $data['inboxs'] = $this->user_model->getUserInboxMail($userId, $psychologistId);
        $data['outboxs'] = $this->user_model->getUserOutboxMail($userId, $psychologistId);
        $this->load->view('user/save_mail', $data);
    }

    function createMailPdf() {
        $this->load->view('includes/header_print');
        $userId = $this->uri->segment(3);
        //$psychologistId = $this->session->userdata('user_id');
        $psychologistId = $this->uri->segment(4);
        $data['inboxs'] = $this->user_model->getUserInboxMail($userId, $psychologistId);
        // print_r($data['inboxs']);
        $data['outboxs'] = $this->user_model->getUserOutboxMail($userId, $psychologistId);

        //$this->load->model('worksheet/worksheet_model');
        //$result = $this->worksheet_model->getAllFormData(0, 999999, 'asc', $userId);
        //$data["allFormData"] = $result[0];
        //$data["totalRows"] = $result[1];

            // echo "message";exit;
            // continue;
            $data["main_content"] = 'user/save_mail';
            $data["template_header"] = 'includes/template_header';
            $data["template_footer"] = 'includes/template_footer';
            $this->load->view('includes/template_print', $data);


        // $this->load->view('includes/template',$data);
        //$this->load->view('user/save_mail',$data);
        //$this->load->helper(array('dompdf', 'file'));
        // page info here, db calls, etc.
        //$html = $this->load->view('user/save_mail',$data,true);
        //$data = pdf_create($html, 'BIP_'.$userId, true);
        //write_file('name', $data);
        //if you want to write it to disk and/or send it as an attachment
    }

    function send_email_to_psychologist() {
        $psychologist_list = $this->user_model->get_psycholoist_to_send_email();
        foreach ($psychologist_list as $rows_psycho):
            $psycho_id = $rows_psycho->id;
            $email = $rows_psycho->email;
            $psycho_name = $rows_psycho->full_name;
            $total_worksheet = get_total_worksheet_by_psycho_id($psycho_id);
            $total_message = get_total_message_by_psycho_id($psycho_id);
            $total_comment = get_total_comments_by_psycho_id($psycho_id);
            $total_training = get_total_training_by_psycho_id($psycho_id);
            $total_worksheet = $total_worksheet + $total_training;

            $message = ($total_message > 0) ? '<p>Du har ett eller flera nya meddelanden i BIP</p>' : '';
            $message .= ($total_comment > 0) ? '<p>AnvÃ¤ndare har kommenterat ett eller flera arbetsblad i BIP</p>' : '';
            $message .= ($total_worksheet > 0) ? '<p>AnvÃ¤ndare har lagt till ett eller flera nya arbetsblad i BIP</p>' : '';

            if ($message):
                $mail_subject = "Notification from BIP";
                $today = format_date(date('Y-m-j'));
                $mail_message =
                        '<html><head>
                                <style>
                                    body {font:normal 14px/20px "Trebuchet MS", Arial, Helvetica, sans-serif; color:#333; }
                                </style>
                            </head>
                            <body><p>' . $message . '</p>
                            Med v&#228;nlig h&#228;lsning,<br/>
                            BIP - Internetpsykiatri
                            </body></html>';


                $config['mailtype'] = 'html';
                //$config['mailpath'] = '/usr/sbin/sendmail';
                //$config['charset'] = 'iso-8859-1';
                $config['wordwrap'] = TRUE;
                $config['charset'] = 'utf-8';

                $this->email->initialize($config);

                $this->email->from('noreply@barninternetprojektet.se', 'BIP Administrator');
                $this->email->to($email);
                $this->email->to('bijay.manandhar@websearchpro.net');
                //$this->email->bcc("sujeet216@gmail.com");
                $this->email->subject($mail_subject);
                $this->email->message($mail_message);

                 if (!$this->email->send()) {
                    $response = $this->email->print_debugger();
                    // $this->logger->logAction('user/send_email_to_psychologist', (array)$response);
        $this->logger->logAction('user/send_email_to_psychologist', (array)$response);
                }
            endif;

        /*  $email_list = $this->user_model->get_email_detail_by_psychologist_id($psycho_id);

          if ($email_list):
          echo '<div>
          <h3>' . $psycho_name . '</h3>
          </div>
          <table border="1" cellpadding="5" cellspacing="0">

          <tr>
          <th>Patient Name</th>
          <th>Total Message</th>
          <th>Total Worksheet</th>
          <th>Total Comment</th>
          </tr>
          ';
          $gtotal_message = 0;
          $gtotal_worksheet = 0;
          $gtotal_comment = 0;
          foreach ($email_list as $rows_email):
          //                    echo '<pre>';
          //                print_r($rows_email);
          if ($rows_email->total_message || $rows_email->total_worksheet || $rows_email->total_comment):
          $gtotal_message = $gtotal_message + $rows_email->total_message;
          $gtotal_worksheet = $gtotal_worksheet + $rows_email->total_worksheet;
          $gtotal_comment = $gtotal_comment + $rows_email->total_comment;

          $full_name = ($rows_email->full_name) ? ($rows_email->full_name) : "-";
          $message = ($rows_email->total_message) ? ($rows_email->total_message) : "-";
          $worksheet = ($rows_email->total_worksheet) ? ($rows_email->total_worksheet) : "-";
          $comment = ($rows_email->total_comment) ? ($rows_email->total_comment) : "-";

          echo '<tr>
          <td>' . $full_name . '</td>
          <td>' . $message . '</td>
          <td>' . $worksheet . '</td>
          <td>' . $comment . '</td>
          </tr>';
          endif;
          endforeach;
          echo '<tr>
          <td>Totals:</td>
          <td><b>' . $gtotal_message . '</b></td>
          <td><b>' . $gtotal_worksheet . '</b></td>
          <td><b>' . $gtotal_comment . '</b></td>
          </tr>
          </table>';
          endif;
         */
        endforeach;
    }

    function testcron() {
        $mail_subject = "Notification from BIP";
        $today = format_date(date('Y-m-j'));
        $mail_message =
                '<html><head>
                                <style>
                                    body {font:normal 14px/20px "Trebuchet MS", Arial, Helvetica, sans-serif; color:#333; }
                                </style>
                            </head>
                            <body><p>' . $message . '</p>
                            Med v&#228;nlig h&#228;lsning,<br/>
                            BIP - Internetpsykiatri
                            </body></html>';

        $config['mailtype'] = 'html';
        //$config['mailpath'] = '/usr/sbin/sendmail';
        //$config['charset'] = 'iso-8859-1';
        $config['wordwrap'] = TRUE;
        $config['charset'] = 'utf-8';

        $this->email->initialize($config);

        $this->email->from('noreply@barninternetprojektet.se', 'BIP - Barninternetpsykiatri');
        // $this->email->to($email);
        $this->email->to('bijay.manandhar@websearchpro.net');
        //$this->email->bcc("sujeet216@gmail.com");
        $this->email->subject($mail_subject);
        $this->email->message($mail_message);

        $this->email->send();
    }

    function error_report(){

        $data["main_content"] = 'user/user/error_report';

        $this->load->view('includes/admin/template', $data);

    }

    function notify_all_errors()
    {
      $this->load->library('form_validation');
      $this->form_validation->set_rules('subject','lang:subject','trim|required|xss_clean|min_length[2]');
      $this->form_validation->set_rules('message','lang:message','trim|xss_clean');

      if ($this->form_validation->run() == FALSE) {
      	$this->error_report();
      }else{
    	$this->load->library('email');

    	$mail_subject = $this->input->post('subject');
    	$message = $this->input->post('message');
    	$message = (!empty($message)) ? $message: lang('an_erorr_occured');
        $mail_message =
                '<html><head>
                                <style>
                                    body {font:normal 14px/20px "Trebuchet MS", Arial, Helvetica, sans-serif; color:#333; }
                                </style>
                            </head>
                            <body><p>' . $message . '</p>
                            Med v&#228;nlig h&#228;lsning,<br/>
                            BIP - Internetpsykiatri
                            </body></html>';

        $config['mailtype'] = 'html';
        //$config['mailpath'] = '/usr/sbin/sendmail';
        //$config['charset'] = 'iso-8859-1';
        $config['wordwrap'] = TRUE;
        $config['charset'] = 'utf-8';

        $this->email->initialize($config);

        $this->email->from('noreply@barninternetprojektet.se', 'BIP Administrator');
        $this->email->to('dharmaraj@tulipstechnologies.com');
        $this->email->subject($mail_subject);

        $filename = 'log-'.date('Y-m-d-H-i-s').'.php';
        $attachment = APPPATH . 'logs/'.'log-'.date('Y-m-d').'.php';
        $cid = $this->email->attach($attachment,'attachment', $filename);
        $this->email->message($mail_message);


        $this->email->send();

		$this->session->set_flashdata('msg', lang("error_report_success"));
        // echo $this->email->print_debugger();exit;
        redirect(site_url('user/error_report'));

      }

    }

}
